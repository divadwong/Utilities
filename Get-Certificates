Param(
	[Parameter(Mandatory=$False)]
	[string[]]$Servers,
	[Parameter(Mandatory=$False)]
	[string]$FilterIssuerbyName = "Your Issuer Here" # use $null if you do not want to filter
)

#$Servers = "Server1","Server2"   # unrem for testing
$location = Split-Path $PSCommandPath -Parent
if(!($Servers)){[string[]]$Servers = Get-Content $location\Servers-GetCertificates.txt}
$Report = @()

if($FilterIssuerbyName){Write-host "Displaying only Certificates Issued By $FilterIssuerbyName"`n}
write-host "Processing ....."
foreach($Server in $Servers)
{
	Write-host $Server
	$store = New-Object System.Security.Cryptography.X509Certificates.X509Store("\\$Server\My","LocalMachine")
	$store.Open("ReadOnly")
	$Certificate = $Store.Certificates
	if(!($Certificate))
	{
		$Properties = [PSCustomObject]@{Server = $Server;IssuedTo = "ERROR occurred";IssuedBy = $Error[0].Exception;Expires = $null;DaystoExpire = $null;Usages = $null}
		$Report += $Properties
	}

	For ($i=0; $i -lt $Certificate.Count; $i++)
	{
		$Usages = foreach($key in $Certificate[$i].Extensions)
		{
			if('KeyUsages' -in $key.psobject.Properties.Name ){$key.KeyUsages}
			if('EnhancedKeyUsages' -in $key.psobject.Properties.Name){$key.EnhancedKeyUsages.FriendlyName}
		}

		$Properties = [PSCustomObject]@{    
			Server = $Server
			IssuedTo = ((($Certificate[$i].Subject -Split "CN=")[1] -split ",")[0] -Split "\+")[0]
			IssuedBy = ((($Certificate[$i].Issuer -Split "CN=")[1] -split ",")[0] -Split "\+")[0]
			Expires = $Certificate[$i].NotAfter
			DaystoExpire = ($Certificate[$i].NotAfter â€“ (Get-Date)).Days
			Usages = $Usages -join ', '
		}
		if(!($FilterIssuerbyName)){$Report += $Properties}
		elseif($Certificate[$i].Issuer -like "*$FilterIssuerbyName*"){$Report += $Properties}
    }
}
  
$Filedate = (Get-Date).ToString("yyyy-MM-dd")
$Report | Export-CSV $location\CertExpReport_$Filedate.csv -NoTypeInformation -Force
Write-host "Report exported to $location\CertExpReport_$Filedate.csv"
$Report | ogv -Title "Certicate Report" -Wait
